AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # CodeCommit Repository for the Spring Boot application code
  SpringBootCodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: springboot-hello-world-repo
      Code:
        S3:
          Bucket: !Ref CodeBucket
          Key: springboot.zip

  # CodeBuild Project to build the Docker image
  SpringBootCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: springboot-build-project
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: REPOSITORY_URI
            Value: !Sub "${SpringBootECRRepository.RepositoryUri}"
      Source:
        Type: CODECOMMIT
        Location: !GetAtt SpringBootCodeCommitRepository.CloneUrlHttp
      Artifacts:
        Type: NO_ARTIFACTS
      ServiceRole: arn:aws:iam::${AWS::AccountId}:role/CodeBuildServiceRole  # Use a suitable IAM role

  # CodePipeline to orchestrate the process
  SpringBootCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: arn:aws:iam::${AWS::AccountId}:role/CodePipelineServiceRole  # Use a suitable IAM role
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket  # Replace with your bucket name
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                RepositoryName: !Ref SpringBootCodeCommitRepository
                BranchName: master
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref SpringBootCodeBuildProject
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: '1'
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ClusterName: !Ref SpringBootECSCluster
                ServiceName: !Ref SpringBootECSService
                FileName: imagedefinitions.json
